#BlueJ class context
comment0.target=ScoreSave
comment0.text=\r\n\ Saves\ the\ Score\ and\ Names\ during\ one\ session\r\n\ \r\n\ @author\ Vincent\ Hsieh\r\n\ @version\ 1.0\r\n
comment1.params=name\ score
comment1.target=void\ add(java.lang.String,\ int)
comment1.text=\r\n\ Add\ a\ record\ into\ the\ ScoreSave\ with\ the\ name\ and\ score\r\n
comment2.params=n
comment2.target=java.lang.String\ getName(int)
comment2.text=\r\n\ Get\ the\ record\ name\ at\ this\ index\r\n
comment3.params=n
comment3.target=int\ getScore(int)
comment3.text=\r\n\ Get\ the\ record\ score\ at\ this\ index\r\n
comment4.params=
comment4.target=void\ sort()
comment4.text=\r\n\ triggers\ a\ sort\ to\ the\ ScoreSave\r\n
comment5.params=l\ h
comment5.target=void\ scoresQuicksort(int,\ int)
comment5.text=\r\n\ I\ HAVE\ NO\ IDEA\ HOW\ TO\ GENERALIZE\ IT\ DUE\ TO\ HOW\ IT\ IS\ SET\ UP\r\n\ but\ its\ quicksort,\ and\ then\ used\ for\ scores\r\n
comment6.params=l\ h
comment6.target=int\ scoresPartition(int,\ int)
comment6.text=\r\n\ Partition\ function\ used\ by\ scoresQuicksort\r\n
comment7.params=list\ target
comment7.target=int\ linearSearch(java.util.List,\ java.lang.Object)
comment7.text=\r\n\ triditonal\ liner\ search,\ think\ it\ supports\ all\ object\ type\r\n\ @param\ \ list\ \ \ a\ list\ of\ objects\r\n\ @param\ \ target\ \ \ the\ object\ we\ are\ looking\ for\r\n\ @return\ \ \ \ \ the\ index\ of\ this\ object,\ or\ -1\ if\ not\ found\ \r\n
numComments=8
